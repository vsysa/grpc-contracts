// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: daemon/efficiencyCalculator/model/v1/ptm.proto

package grpcPtmModel

import (
	grpcFilterCondition "github.com/vsysa/grpc-contracts/gen/go/daemon/common/model/v1/grpcFilterCondition"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupByType int32

const (
	GroupByType_GROUP_BY_PRODUCT  GroupByType = 0
	GroupByType_GROUP_BY_PRODLINE GroupByType = 1
	GroupByType_GROUP_BY_LINESET  GroupByType = 2
	GroupByType_GROUP_BY_FURNACE  GroupByType = 3
)

// Enum value maps for GroupByType.
var (
	GroupByType_name = map[int32]string{
		0: "GROUP_BY_PRODUCT",
		1: "GROUP_BY_PRODLINE",
		2: "GROUP_BY_LINESET",
		3: "GROUP_BY_FURNACE",
	}
	GroupByType_value = map[string]int32{
		"GROUP_BY_PRODUCT":  0,
		"GROUP_BY_PRODLINE": 1,
		"GROUP_BY_LINESET":  2,
		"GROUP_BY_FURNACE":  3,
	}
)

func (x GroupByType) Enum() *GroupByType {
	p := new(GroupByType)
	*p = x
	return p
}

func (x GroupByType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupByType) Descriptor() protoreflect.EnumDescriptor {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_enumTypes[0].Descriptor()
}

func (GroupByType) Type() protoreflect.EnumType {
	return &file_daemon_efficiencyCalculator_model_v1_ptm_proto_enumTypes[0]
}

func (x GroupByType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupByType.Descriptor instead.
func (GroupByType) EnumDescriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{0}
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pack float64                 `protobuf:"fixed64,1,opt,name=pack,proto3" json:"pack,omitempty"`
	Melt float64                 `protobuf:"fixed64,2,opt,name=melt,proto3" json:"melt,omitempty"`
	Ptm  *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=ptm,proto3" json:"ptm,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{0}
}

func (x *Total) GetPack() float64 {
	if x != nil {
		return x.Pack
	}
	return 0
}

func (x *Total) GetMelt() float64 {
	if x != nil {
		return x.Melt
	}
	return 0
}

func (x *Total) GetPtm() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Ptm
	}
	return nil
}

type DataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pack       float64                 `protobuf:"fixed64,1,opt,name=pack,proto3" json:"pack,omitempty"`
	Melt       float64                 `protobuf:"fixed64,2,opt,name=melt,proto3" json:"melt,omitempty"`
	Ptm        *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=ptm,proto3" json:"ptm,omitempty"`
	ProdlineId *int32                  `protobuf:"varint,4,opt,name=prodline_id,proto3,oneof" json:"prodline_id,omitempty"`
	LinesetId  *int32                  `protobuf:"varint,5,opt,name=lineset_id,proto3,oneof" json:"lineset_id,omitempty"`
	FurnaceId  *int32                  `protobuf:"varint,6,opt,name=furnace_id,proto3,oneof" json:"furnace_id,omitempty"`
	ComplexId  *int32                  `protobuf:"varint,7,opt,name=complex_id,proto3,oneof" json:"complex_id,omitempty"`
}

func (x *DataItem) Reset() {
	*x = DataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItem) ProtoMessage() {}

func (x *DataItem) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItem.ProtoReflect.Descriptor instead.
func (*DataItem) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{1}
}

func (x *DataItem) GetPack() float64 {
	if x != nil {
		return x.Pack
	}
	return 0
}

func (x *DataItem) GetMelt() float64 {
	if x != nil {
		return x.Melt
	}
	return 0
}

func (x *DataItem) GetPtm() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Ptm
	}
	return nil
}

func (x *DataItem) GetProdlineId() int32 {
	if x != nil && x.ProdlineId != nil {
		return *x.ProdlineId
	}
	return 0
}

func (x *DataItem) GetLinesetId() int32 {
	if x != nil && x.LinesetId != nil {
		return *x.LinesetId
	}
	return 0
}

func (x *DataItem) GetFurnaceId() int32 {
	if x != nil && x.FurnaceId != nil {
		return *x.FurnaceId
	}
	return 0
}

func (x *DataItem) GetComplexId() int32 {
	if x != nil && x.ComplexId != nil {
		return *x.ComplexId
	}
	return 0
}

type HistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Pack       float64                 `protobuf:"fixed64,2,opt,name=pack,proto3" json:"pack,omitempty"`
	Melt       float64                 `protobuf:"fixed64,3,opt,name=melt,proto3" json:"melt,omitempty"`
	Ptm        *wrapperspb.DoubleValue `protobuf:"bytes,4,opt,name=ptm,proto3" json:"ptm,omitempty"`
	ProdlineId *int32                  `protobuf:"varint,5,opt,name=prodline_id,proto3,oneof" json:"prodline_id,omitempty"`
	LinesetId  *int32                  `protobuf:"varint,6,opt,name=lineset_id,proto3,oneof" json:"lineset_id,omitempty"`
	FurnaceId  *int32                  `protobuf:"varint,7,opt,name=furnace_id,proto3,oneof" json:"furnace_id,omitempty"`
	ComplexId  *int32                  `protobuf:"varint,8,opt,name=complex_id,proto3,oneof" json:"complex_id,omitempty"`
}

func (x *HistoryItem) Reset() {
	*x = HistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryItem) ProtoMessage() {}

func (x *HistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryItem.ProtoReflect.Descriptor instead.
func (*HistoryItem) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{2}
}

func (x *HistoryItem) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *HistoryItem) GetPack() float64 {
	if x != nil {
		return x.Pack
	}
	return 0
}

func (x *HistoryItem) GetMelt() float64 {
	if x != nil {
		return x.Melt
	}
	return 0
}

func (x *HistoryItem) GetPtm() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Ptm
	}
	return nil
}

func (x *HistoryItem) GetProdlineId() int32 {
	if x != nil && x.ProdlineId != nil {
		return *x.ProdlineId
	}
	return 0
}

func (x *HistoryItem) GetLinesetId() int32 {
	if x != nil && x.LinesetId != nil {
		return *x.LinesetId
	}
	return 0
}

func (x *HistoryItem) GetFurnaceId() int32 {
	if x != nil && x.FurnaceId != nil {
		return *x.FurnaceId
	}
	return 0
}

func (x *HistoryItem) GetComplexId() int32 {
	if x != nil && x.ComplexId != nil {
		return *x.ComplexId
	}
	return 0
}

type TotalEfficiencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    *timestamppb.Timestamp                `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To      *timestamppb.Timestamp                `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Where   []*grpcFilterCondition.WhereCondition `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	GroupBy []GroupByType                         `protobuf:"varint,4,rep,packed,name=groupBy,proto3,enum=efficiencyCalculator.model.v1.GroupByType" json:"groupBy,omitempty"`
}

func (x *TotalEfficiencyRequest) Reset() {
	*x = TotalEfficiencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalEfficiencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalEfficiencyRequest) ProtoMessage() {}

func (x *TotalEfficiencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalEfficiencyRequest.ProtoReflect.Descriptor instead.
func (*TotalEfficiencyRequest) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{3}
}

func (x *TotalEfficiencyRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TotalEfficiencyRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TotalEfficiencyRequest) GetWhere() []*grpcFilterCondition.WhereCondition {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *TotalEfficiencyRequest) GetGroupBy() []GroupByType {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

type TotalEfficiencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *Total      `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*DataItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TotalEfficiencyResponse) Reset() {
	*x = TotalEfficiencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalEfficiencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalEfficiencyResponse) ProtoMessage() {}

func (x *TotalEfficiencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalEfficiencyResponse.ProtoReflect.Descriptor instead.
func (*TotalEfficiencyResponse) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{4}
}

func (x *TotalEfficiencyResponse) GetTotal() *Total {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *TotalEfficiencyResponse) GetData() []*DataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryEfficiencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From               *timestamppb.Timestamp                `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                 *timestamppb.Timestamp                `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Where              []*grpcFilterCondition.WhereCondition `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	GroupBy            []GroupByType                         `protobuf:"varint,4,rep,packed,name=groupBy,proto3,enum=efficiencyCalculator.model.v1.GroupByType" json:"groupBy,omitempty"`
	StartOfDay         grpcFilterCondition.StartOfDayType    `protobuf:"varint,5,opt,name=startOfDay,proto3,enum=common.model.v1.StartOfDayType" json:"startOfDay,omitempty"`
	Detalization       grpcFilterCondition.DetalizationType  `protobuf:"varint,6,opt,name=Detalization,proto3,enum=common.model.v1.DetalizationType" json:"Detalization,omitempty"`
	IsFillEmptyPeriods bool                                  `protobuf:"varint,7,opt,name=IsFillEmptyPeriods,proto3" json:"IsFillEmptyPeriods,omitempty"`
}

func (x *HistoryEfficiencyRequest) Reset() {
	*x = HistoryEfficiencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryEfficiencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryEfficiencyRequest) ProtoMessage() {}

func (x *HistoryEfficiencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryEfficiencyRequest.ProtoReflect.Descriptor instead.
func (*HistoryEfficiencyRequest) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryEfficiencyRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *HistoryEfficiencyRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *HistoryEfficiencyRequest) GetWhere() []*grpcFilterCondition.WhereCondition {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *HistoryEfficiencyRequest) GetGroupBy() []GroupByType {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *HistoryEfficiencyRequest) GetStartOfDay() grpcFilterCondition.StartOfDayType {
	if x != nil {
		return x.StartOfDay
	}
	return grpcFilterCondition.StartOfDayType(0)
}

func (x *HistoryEfficiencyRequest) GetDetalization() grpcFilterCondition.DetalizationType {
	if x != nil {
		return x.Detalization
	}
	return grpcFilterCondition.DetalizationType(0)
}

func (x *HistoryEfficiencyRequest) GetIsFillEmptyPeriods() bool {
	if x != nil {
		return x.IsFillEmptyPeriods
	}
	return false
}

type HistoryEfficiencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   *Total         `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*DataItem    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	History []*HistoryItem `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *HistoryEfficiencyResponse) Reset() {
	*x = HistoryEfficiencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryEfficiencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryEfficiencyResponse) ProtoMessage() {}

func (x *HistoryEfficiencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryEfficiencyResponse.ProtoReflect.Descriptor instead.
func (*HistoryEfficiencyResponse) Descriptor() ([]byte, []int) {
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP(), []int{6}
}

func (x *HistoryEfficiencyResponse) GetTotal() *Total {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *HistoryEfficiencyResponse) GetData() []*DataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HistoryEfficiencyResponse) GetHistory() []*HistoryItem {
	if x != nil {
		return x.History
	}
	return nil
}

var File_daemon_efficiencyCalculator_model_v1_ptm_proto protoreflect.FileDescriptor

var file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x74, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1d, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5f, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x65, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x6c, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x70, 0x74, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x70, 0x74, 0x6d,
	0x22, 0xb5, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x6d, 0x65, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x74, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x03, 0x70, 0x74, 0x6d, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x66, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x66, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66,
	0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x0b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x65, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x6c, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x70, 0x74, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x70, 0x74, 0x6d,
	0x12, 0x25, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x66, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x0a, 0x66, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x69, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x12, 0x44, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x03, 0x0a,
	0x18, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x44, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x44, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x44, 0x65,
	0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x73,
	0x46, 0x69, 0x6c, 0x6c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x19, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2a, 0x66, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x42, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f,
	0x4c, 0x49, 0x4e, 0x45, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x55, 0x52, 0x4e, 0x41, 0x43, 0x45, 0x10, 0x03, 0x42,
	0x5a, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x73,
	0x79, 0x73, 0x61, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x74, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescOnce sync.Once
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescData = file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDesc
)

func file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescGZIP() []byte {
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescOnce.Do(func() {
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescData)
	})
	return file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDescData
}

var file_daemon_efficiencyCalculator_model_v1_ptm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_daemon_efficiencyCalculator_model_v1_ptm_proto_goTypes = []interface{}{
	(GroupByType)(0),                           // 0: efficiencyCalculator.model.v1.GroupByType
	(*Total)(nil),                              // 1: efficiencyCalculator.model.v1.Total
	(*DataItem)(nil),                           // 2: efficiencyCalculator.model.v1.DataItem
	(*HistoryItem)(nil),                        // 3: efficiencyCalculator.model.v1.HistoryItem
	(*TotalEfficiencyRequest)(nil),             // 4: efficiencyCalculator.model.v1.TotalEfficiencyRequest
	(*TotalEfficiencyResponse)(nil),            // 5: efficiencyCalculator.model.v1.TotalEfficiencyResponse
	(*HistoryEfficiencyRequest)(nil),           // 6: efficiencyCalculator.model.v1.HistoryEfficiencyRequest
	(*HistoryEfficiencyResponse)(nil),          // 7: efficiencyCalculator.model.v1.HistoryEfficiencyResponse
	(*wrapperspb.DoubleValue)(nil),             // 8: google.protobuf.DoubleValue
	(*timestamppb.Timestamp)(nil),              // 9: google.protobuf.Timestamp
	(*grpcFilterCondition.WhereCondition)(nil), // 10: common.model.v1.WhereCondition
	(grpcFilterCondition.StartOfDayType)(0),    // 11: common.model.v1.StartOfDayType
	(grpcFilterCondition.DetalizationType)(0),  // 12: common.model.v1.DetalizationType
}
var file_daemon_efficiencyCalculator_model_v1_ptm_proto_depIdxs = []int32{
	8,  // 0: efficiencyCalculator.model.v1.Total.ptm:type_name -> google.protobuf.DoubleValue
	8,  // 1: efficiencyCalculator.model.v1.DataItem.ptm:type_name -> google.protobuf.DoubleValue
	9,  // 2: efficiencyCalculator.model.v1.HistoryItem.time:type_name -> google.protobuf.Timestamp
	8,  // 3: efficiencyCalculator.model.v1.HistoryItem.ptm:type_name -> google.protobuf.DoubleValue
	9,  // 4: efficiencyCalculator.model.v1.TotalEfficiencyRequest.from:type_name -> google.protobuf.Timestamp
	9,  // 5: efficiencyCalculator.model.v1.TotalEfficiencyRequest.to:type_name -> google.protobuf.Timestamp
	10, // 6: efficiencyCalculator.model.v1.TotalEfficiencyRequest.where:type_name -> common.model.v1.WhereCondition
	0,  // 7: efficiencyCalculator.model.v1.TotalEfficiencyRequest.groupBy:type_name -> efficiencyCalculator.model.v1.GroupByType
	1,  // 8: efficiencyCalculator.model.v1.TotalEfficiencyResponse.total:type_name -> efficiencyCalculator.model.v1.Total
	2,  // 9: efficiencyCalculator.model.v1.TotalEfficiencyResponse.data:type_name -> efficiencyCalculator.model.v1.DataItem
	9,  // 10: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.from:type_name -> google.protobuf.Timestamp
	9,  // 11: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.to:type_name -> google.protobuf.Timestamp
	10, // 12: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.where:type_name -> common.model.v1.WhereCondition
	0,  // 13: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.groupBy:type_name -> efficiencyCalculator.model.v1.GroupByType
	11, // 14: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.startOfDay:type_name -> common.model.v1.StartOfDayType
	12, // 15: efficiencyCalculator.model.v1.HistoryEfficiencyRequest.Detalization:type_name -> common.model.v1.DetalizationType
	1,  // 16: efficiencyCalculator.model.v1.HistoryEfficiencyResponse.total:type_name -> efficiencyCalculator.model.v1.Total
	2,  // 17: efficiencyCalculator.model.v1.HistoryEfficiencyResponse.data:type_name -> efficiencyCalculator.model.v1.DataItem
	3,  // 18: efficiencyCalculator.model.v1.HistoryEfficiencyResponse.history:type_name -> efficiencyCalculator.model.v1.HistoryItem
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_daemon_efficiencyCalculator_model_v1_ptm_proto_init() }
func file_daemon_efficiencyCalculator_model_v1_ptm_proto_init() {
	if File_daemon_efficiencyCalculator_model_v1_ptm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalEfficiencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalEfficiencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryEfficiencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryEfficiencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_efficiencyCalculator_model_v1_ptm_proto_goTypes,
		DependencyIndexes: file_daemon_efficiencyCalculator_model_v1_ptm_proto_depIdxs,
		EnumInfos:         file_daemon_efficiencyCalculator_model_v1_ptm_proto_enumTypes,
		MessageInfos:      file_daemon_efficiencyCalculator_model_v1_ptm_proto_msgTypes,
	}.Build()
	File_daemon_efficiencyCalculator_model_v1_ptm_proto = out.File
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_rawDesc = nil
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_goTypes = nil
	file_daemon_efficiencyCalculator_model_v1_ptm_proto_depIdxs = nil
}
